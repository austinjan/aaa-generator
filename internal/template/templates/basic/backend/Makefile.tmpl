SHELL := /bin/sh
.DEFAULT_GOAL := help
BIN := {{.ProjectName}}
PORT := {{.Port}}

.PHONY: install dev frontend-dev backend-dev build frontend-build backend-build run test fmt vet lint clean docker-build docker-run help

install:
	@echo "Installing frontend dependencies..."
	cd frontend && npm install
	@echo "Tidying Go modules..."
	go mod tidy

dev:
	@echo "Starting frontend dev server in the background..."
	cd frontend && npm run dev &
	@echo "Starting backend dev server..."
	go run ./main.go

frontend-dev:
	cd frontend && npm run dev

backend-dev:
	go run ./main.go

build: frontend-build backend-build
	@echo "Build complete. Run ./$(BIN) to start the backend."

frontend-build:
	@echo "Building frontend bundle..."
	cd frontend && npm run build

backend-build:
	@echo "Building backend binary..."
	go build -trimpath -ldflags="-s -w" -o $(BIN) ./main.go

run: build
	@echo "Starting $(BIN)..."
	./$(BIN)

test:
	@echo "Running Go tests..."
	go test ./...
	@echo "Running frontend tests..."
	cd frontend && npm test

fmt:
	go fmt ./...

vet:
	go vet ./...

lint: fmt vet

clean:
	@echo "Removing build artifacts..."
	rm -rf frontend/dist
	rm -f $(BIN)

docker-build:
	docker build -t $(BIN):latest .

docker-run:
	docker run -p $(PORT):$(PORT) $(BIN):latest

help:
	@echo "Available targets:"
	@echo "  make install        Install dependencies"
	@echo "  make frontend-dev   Run the frontend dev server"
	@echo "  make backend-dev    Run the backend dev server"
	@echo "  make dev            Run frontend (background) and backend dev servers"
	@echo "  make build          Build frontend assets and backend binary"
	@echo "  make run            Build and run the backend binary"
	@echo "  make test           Run Go and frontend tests"
	@echo "  make fmt|vet|lint   Run Go format and static analysis commands"
	@echo "  make clean          Remove build artifacts"
	@echo "  make docker-build   Build a Docker image"
	@echo "  make docker-run     Run the Docker image"
